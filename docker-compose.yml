version: '3.8'

services:
  api:
    image: ${AWS_ECR_URL:?required}/rocketpay:${APP_VERSION:-latest}
    env_file: .env.production
    ports:
      - "${PORT:-80}:${PORT:-80}"
    depends_on:
      - postgres
  grafana:
    image: ${AWS_ECR_URL:?required}/grafana:7.5.2
    env_file: ./docker/grafana/.env.production
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
  prometheus:
    image: ${AWS_ECR_URL:?required}/prometheus:v2.26.0
    ports:
      - "9000:9000"
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/config.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  postgres_exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    env_file: ./docker/postgres_exporter/.env.production
    ports:
      - '9187:9187'
    depends_on:
      - postgres
  postgres:
    image: postgres:${POSTGRES_VERSION:-13-alpine}
    env_file: ./docker/postgres/.env.production
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    command: -p ${POSTGRES_PORT:-5432}
volumes:
  grafana_data:
  prometheus_data:
  pgdata:
networks:
  default:
    name: rocketpay